// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ProtoInterface.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace C2SProtoInterface {

  /// <summary>Holder for reflection information generated from ProtoInterface.proto</summary>
  public static partial class ProtoInterfaceReflection {

    #region Descriptor
    /// <summary>File descriptor for ProtoInterface.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoInterfaceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90b0ludGVyZmFjZS5wcm90bxIRQzJTUHJvdG9JbnRlcmZhY2UiJQoI",
            "QzJTTG9naW4SCwoDZ0lkGAEgASgFEgwKBG5hbWUYAiABKAkiGgoIUzJDTG9n",
            "aW4SDgoGcm9vbUlkGAEgASgFIg4KDEMyU1N0YXJ0R2FtZSJZCg5DMlNGcmFt",
            "ZVVwZGF0ZRINCgVzdGFydBgBIAEoBRILCgNlbmQYAiABKAUSDQoFYW5nbGUY",
            "AyABKAMSDQoFaW5wdXQYBCABKAUSDQoFaW5kZXgYBSABKAUiEAoOQzJTUHJp",
            "bnRGcmFtZXMiHwoLQzJTSm9pblJvb20SEAoIcm9vbUd1aWQYASABKAUiKwoN",
            "UzJDUGxheWVyRGF0YRIMCgRndWlkGAEgASgFEgwKBG5hbWUYAiABKAkidAoM",
            "UzJDTWF0Y2hJbmZvEgsKA3BvdBgBIAEoBRIQCghyb29tR3VpZBgCIAEoBRIS",
            "CgpyYW5kb21TZWVkGAMgASgFEjEKB3BsYXllcnMYBCADKAsyIC5DMlNQcm90",
            "b0ludGVyZmFjZS5TMkNQbGF5ZXJEYXRhIlUKC1MyQ1Jvb21JbmZvEhAKCHJv",
            "b21HdWlkGAEgASgFEjQKCmFsbFBsYXllcnMYAiADKAsyIC5DMlNQcm90b0lu",
            "dGVyZmFjZS5TMkNQbGF5ZXJEYXRhIhAKDlMyQ1ByaW50RnJhbWVzIlUKDFMy",
            "Q0ZyYW1lRGF0YRISCgpmcmFtZUluZGV4GAEgASgFEgwKBGdpZHMYAiADKAUS",
            "DgoGaW5wdXRzGAMgAygFEhMKC2lucHV0QW5nbGVzGAQgAygDIl0KDlMyQ0Zy",
            "YW1lVXBkYXRlEhYKDmN1clNlcnZlckZyYW1lGAEgASgFEjMKCmZyYW1lRGF0",
            "YXMYAiADKAsyHy5DMlNQcm90b0ludGVyZmFjZS5TMkNGcmFtZURhdGEiQgoO",
            "UzJDQWxsUm9vbUluZm8SMAoIYWxsUm9vbXMYASADKAsyHi5DMlNQcm90b0lu",
            "dGVyZmFjZS5TMkNSb29tSW5mbyqMAgoIRU1lc3NhZ2USCAoETm9uZRAAEg0K",
            "CUhlYXJ0QmVhdBABEg0KCUNvbm5lY3RlZBACEgkKBUxvZ2luEAMSCgoGTG9n",
            "b3V0EAQSEgoOQzJTX0NyZWF0ZVJvb20QBRIQCgxDMlNfSm9pblJvb20QBhIR",
            "Cg1DMlNfTGVhdmVSb29tEAcSFwoTUzJDX1Jvb21JbmZvUmVmcmVzaBAIEhEK",
            "DVMyQ19MZWF2ZVJvb20QCRIQCgxSZXFSb29tSW5mb3MQChISCg5DMlNfU3Rh",
            "cnRNYXRjaBALEhIKDlMyQ19TdGFydE1hdGNoEAwSEAoMQzJTX0VuZE1hdGNo",
            "EA0SEAoMUzJDX0VuZE1hdGNoEA5iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::C2SProtoInterface.EMessage), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.C2SLogin), global::C2SProtoInterface.C2SLogin.Parser, new[]{ "GId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CLogin), global::C2SProtoInterface.S2CLogin.Parser, new[]{ "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.C2SStartGame), global::C2SProtoInterface.C2SStartGame.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.C2SFrameUpdate), global::C2SProtoInterface.C2SFrameUpdate.Parser, new[]{ "Start", "End", "Angle", "Input", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.C2SPrintFrames), global::C2SProtoInterface.C2SPrintFrames.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.C2SJoinRoom), global::C2SProtoInterface.C2SJoinRoom.Parser, new[]{ "RoomGuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CPlayerData), global::C2SProtoInterface.S2CPlayerData.Parser, new[]{ "Guid", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CMatchInfo), global::C2SProtoInterface.S2CMatchInfo.Parser, new[]{ "Pot", "RoomGuid", "RandomSeed", "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CRoomInfo), global::C2SProtoInterface.S2CRoomInfo.Parser, new[]{ "RoomGuid", "AllPlayers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CPrintFrames), global::C2SProtoInterface.S2CPrintFrames.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CFrameData), global::C2SProtoInterface.S2CFrameData.Parser, new[]{ "FrameIndex", "Gids", "Inputs", "InputAngles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CFrameUpdate), global::C2SProtoInterface.S2CFrameUpdate.Parser, new[]{ "CurServerFrame", "FrameDatas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::C2SProtoInterface.S2CAllRoomInfo), global::C2SProtoInterface.S2CAllRoomInfo.Parser, new[]{ "AllRooms" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EMessage {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("HeartBeat")] HeartBeat = 1,
    [pbr::OriginalName("Connected")] Connected = 2,
    [pbr::OriginalName("Login")] Login = 3,
    [pbr::OriginalName("Logout")] Logout = 4,
    [pbr::OriginalName("C2S_CreateRoom")] C2SCreateRoom = 5,
    [pbr::OriginalName("C2S_JoinRoom")] C2SJoinRoom = 6,
    [pbr::OriginalName("C2S_LeaveRoom")] C2SLeaveRoom = 7,
    [pbr::OriginalName("S2C_RoomInfoRefresh")] S2CRoomInfoRefresh = 8,
    [pbr::OriginalName("S2C_LeaveRoom")] S2CLeaveRoom = 9,
    [pbr::OriginalName("ReqRoomInfos")] ReqRoomInfos = 10,
    [pbr::OriginalName("C2S_StartMatch")] C2SStartMatch = 11,
    [pbr::OriginalName("S2C_StartMatch")] S2CStartMatch = 12,
    [pbr::OriginalName("C2S_EndMatch")] C2SEndMatch = 13,
    [pbr::OriginalName("S2C_EndMatch")] S2CEndMatch = 14,
  }

  #endregion

  #region Messages
  public sealed partial class C2SLogin : pb::IMessage<C2SLogin> {
    private static readonly pb::MessageParser<C2SLogin> _parser = new pb::MessageParser<C2SLogin>(() => new C2SLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLogin(C2SLogin other) : this() {
      gId_ = other.gId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SLogin Clone() {
      return new C2SLogin(this);
    }

    /// <summary>Field number for the "gId" field.</summary>
    public const int GIdFieldNumber = 1;
    private int gId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GId {
      get { return gId_; }
      set {
        gId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GId != other.GId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GId != 0) hash ^= GId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SLogin other) {
      if (other == null) {
        return;
      }
      if (other.GId != 0) {
        GId = other.GId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CLogin : pb::IMessage<S2CLogin> {
    private static readonly pb::MessageParser<S2CLogin> _parser = new pb::MessageParser<S2CLogin>(() => new S2CLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLogin(S2CLogin other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CLogin Clone() {
      return new S2CLogin(this);
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CLogin other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SStartGame : pb::IMessage<C2SStartGame> {
    private static readonly pb::MessageParser<C2SStartGame> _parser = new pb::MessageParser<C2SStartGame>(() => new C2SStartGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SStartGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStartGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStartGame(C2SStartGame other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SStartGame Clone() {
      return new C2SStartGame(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SStartGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SStartGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SStartGame other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class C2SFrameUpdate : pb::IMessage<C2SFrameUpdate> {
    private static readonly pb::MessageParser<C2SFrameUpdate> _parser = new pb::MessageParser<C2SFrameUpdate>(() => new C2SFrameUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SFrameUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFrameUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFrameUpdate(C2SFrameUpdate other) : this() {
      start_ = other.start_;
      end_ = other.end_;
      angle_ = other.angle_;
      input_ = other.input_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SFrameUpdate Clone() {
      return new C2SFrameUpdate(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 2;
    private int end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 3;
    private long angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 4;
    private int input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 5;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SFrameUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SFrameUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      if (Angle != other.Angle) return false;
      if (Input != other.Input) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (Angle != 0L) hash ^= Angle.GetHashCode();
      if (Input != 0) hash ^= Input.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(End);
      }
      if (Angle != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Angle);
      }
      if (Input != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Input);
      }
      if (Index != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
      }
      if (Angle != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Angle);
      }
      if (Input != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Input);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SFrameUpdate other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      if (other.Angle != 0L) {
        Angle = other.Angle;
      }
      if (other.Input != 0) {
        Input = other.Input;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadInt32();
            break;
          }
          case 16: {
            End = input.ReadInt32();
            break;
          }
          case 24: {
            Angle = input.ReadInt64();
            break;
          }
          case 32: {
            Input = input.ReadInt32();
            break;
          }
          case 40: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2SPrintFrames : pb::IMessage<C2SPrintFrames> {
    private static readonly pb::MessageParser<C2SPrintFrames> _parser = new pb::MessageParser<C2SPrintFrames>(() => new C2SPrintFrames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SPrintFrames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPrintFrames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPrintFrames(C2SPrintFrames other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SPrintFrames Clone() {
      return new C2SPrintFrames(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SPrintFrames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SPrintFrames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SPrintFrames other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class C2SJoinRoom : pb::IMessage<C2SJoinRoom> {
    private static readonly pb::MessageParser<C2SJoinRoom> _parser = new pb::MessageParser<C2SJoinRoom>(() => new C2SJoinRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2SJoinRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SJoinRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SJoinRoom(C2SJoinRoom other) : this() {
      roomGuid_ = other.roomGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2SJoinRoom Clone() {
      return new C2SJoinRoom(this);
    }

    /// <summary>Field number for the "roomGuid" field.</summary>
    public const int RoomGuidFieldNumber = 1;
    private int roomGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomGuid {
      get { return roomGuid_; }
      set {
        roomGuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2SJoinRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2SJoinRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomGuid != other.RoomGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomGuid != 0) hash ^= RoomGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomGuid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2SJoinRoom other) {
      if (other == null) {
        return;
      }
      if (other.RoomGuid != 0) {
        RoomGuid = other.RoomGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomGuid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CPlayerData : pb::IMessage<S2CPlayerData> {
    private static readonly pb::MessageParser<S2CPlayerData> _parser = new pb::MessageParser<S2CPlayerData>(() => new S2CPlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerData(S2CPlayerData other) : this() {
      guid_ = other.guid_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPlayerData Clone() {
      return new S2CPlayerData(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private int guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0) hash ^= Guid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Guid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Guid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPlayerData other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0) {
        Guid = other.Guid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CMatchInfo : pb::IMessage<S2CMatchInfo> {
    private static readonly pb::MessageParser<S2CMatchInfo> _parser = new pb::MessageParser<S2CMatchInfo>(() => new S2CMatchInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CMatchInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchInfo(S2CMatchInfo other) : this() {
      pot_ = other.pot_;
      roomGuid_ = other.roomGuid_;
      randomSeed_ = other.randomSeed_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CMatchInfo Clone() {
      return new S2CMatchInfo(this);
    }

    /// <summary>Field number for the "pot" field.</summary>
    public const int PotFieldNumber = 1;
    private int pot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pot {
      get { return pot_; }
      set {
        pot_ = value;
      }
    }

    /// <summary>Field number for the "roomGuid" field.</summary>
    public const int RoomGuidFieldNumber = 2;
    private int roomGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomGuid {
      get { return roomGuid_; }
      set {
        roomGuid_ = value;
      }
    }

    /// <summary>Field number for the "randomSeed" field.</summary>
    public const int RandomSeedFieldNumber = 3;
    private int randomSeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandomSeed {
      get { return randomSeed_; }
      set {
        randomSeed_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::C2SProtoInterface.S2CPlayerData> _repeated_players_codec
        = pb::FieldCodec.ForMessage(34, global::C2SProtoInterface.S2CPlayerData.Parser);
    private readonly pbc::RepeatedField<global::C2SProtoInterface.S2CPlayerData> players_ = new pbc::RepeatedField<global::C2SProtoInterface.S2CPlayerData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::C2SProtoInterface.S2CPlayerData> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CMatchInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CMatchInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pot != other.Pot) return false;
      if (RoomGuid != other.RoomGuid) return false;
      if (RandomSeed != other.RandomSeed) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pot != 0) hash ^= Pot.GetHashCode();
      if (RoomGuid != 0) hash ^= RoomGuid.GetHashCode();
      if (RandomSeed != 0) hash ^= RandomSeed.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pot != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Pot);
      }
      if (RoomGuid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomGuid);
      }
      if (RandomSeed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RandomSeed);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pot);
      }
      if (RoomGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomGuid);
      }
      if (RandomSeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomSeed);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CMatchInfo other) {
      if (other == null) {
        return;
      }
      if (other.Pot != 0) {
        Pot = other.Pot;
      }
      if (other.RoomGuid != 0) {
        RoomGuid = other.RoomGuid;
      }
      if (other.RandomSeed != 0) {
        RandomSeed = other.RandomSeed;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Pot = input.ReadInt32();
            break;
          }
          case 16: {
            RoomGuid = input.ReadInt32();
            break;
          }
          case 24: {
            RandomSeed = input.ReadInt32();
            break;
          }
          case 34: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CRoomInfo : pb::IMessage<S2CRoomInfo> {
    private static readonly pb::MessageParser<S2CRoomInfo> _parser = new pb::MessageParser<S2CRoomInfo>(() => new S2CRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRoomInfo(S2CRoomInfo other) : this() {
      roomGuid_ = other.roomGuid_;
      allPlayers_ = other.allPlayers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CRoomInfo Clone() {
      return new S2CRoomInfo(this);
    }

    /// <summary>Field number for the "roomGuid" field.</summary>
    public const int RoomGuidFieldNumber = 1;
    private int roomGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomGuid {
      get { return roomGuid_; }
      set {
        roomGuid_ = value;
      }
    }

    /// <summary>Field number for the "allPlayers" field.</summary>
    public const int AllPlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::C2SProtoInterface.S2CPlayerData> _repeated_allPlayers_codec
        = pb::FieldCodec.ForMessage(18, global::C2SProtoInterface.S2CPlayerData.Parser);
    private readonly pbc::RepeatedField<global::C2SProtoInterface.S2CPlayerData> allPlayers_ = new pbc::RepeatedField<global::C2SProtoInterface.S2CPlayerData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::C2SProtoInterface.S2CPlayerData> AllPlayers {
      get { return allPlayers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomGuid != other.RoomGuid) return false;
      if(!allPlayers_.Equals(other.allPlayers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomGuid != 0) hash ^= RoomGuid.GetHashCode();
      hash ^= allPlayers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomGuid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomGuid);
      }
      allPlayers_.WriteTo(output, _repeated_allPlayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomGuid);
      }
      size += allPlayers_.CalculateSize(_repeated_allPlayers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomGuid != 0) {
        RoomGuid = other.RoomGuid;
      }
      allPlayers_.Add(other.allPlayers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomGuid = input.ReadInt32();
            break;
          }
          case 18: {
            allPlayers_.AddEntriesFrom(input, _repeated_allPlayers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CPrintFrames : pb::IMessage<S2CPrintFrames> {
    private static readonly pb::MessageParser<S2CPrintFrames> _parser = new pb::MessageParser<S2CPrintFrames>(() => new S2CPrintFrames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CPrintFrames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPrintFrames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPrintFrames(S2CPrintFrames other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CPrintFrames Clone() {
      return new S2CPrintFrames(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CPrintFrames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CPrintFrames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CPrintFrames other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class S2CFrameData : pb::IMessage<S2CFrameData> {
    private static readonly pb::MessageParser<S2CFrameData> _parser = new pb::MessageParser<S2CFrameData>(() => new S2CFrameData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFrameData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFrameData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFrameData(S2CFrameData other) : this() {
      frameIndex_ = other.frameIndex_;
      gids_ = other.gids_.Clone();
      inputs_ = other.inputs_.Clone();
      inputAngles_ = other.inputAngles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFrameData Clone() {
      return new S2CFrameData(this);
    }

    /// <summary>Field number for the "frameIndex" field.</summary>
    public const int FrameIndexFieldNumber = 1;
    private int frameIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameIndex {
      get { return frameIndex_; }
      set {
        frameIndex_ = value;
      }
    }

    /// <summary>Field number for the "gids" field.</summary>
    public const int GidsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_gids_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> gids_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Gids {
      get { return gids_; }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_inputs_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> inputs_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "inputAngles" field.</summary>
    public const int InputAnglesFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_inputAngles_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> inputAngles_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> InputAngles {
      get { return inputAngles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFrameData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFrameData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameIndex != other.FrameIndex) return false;
      if(!gids_.Equals(other.gids_)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if(!inputAngles_.Equals(other.inputAngles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameIndex != 0) hash ^= FrameIndex.GetHashCode();
      hash ^= gids_.GetHashCode();
      hash ^= inputs_.GetHashCode();
      hash ^= inputAngles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FrameIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameIndex);
      }
      gids_.WriteTo(output, _repeated_gids_codec);
      inputs_.WriteTo(output, _repeated_inputs_codec);
      inputAngles_.WriteTo(output, _repeated_inputAngles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FrameIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameIndex);
      }
      size += gids_.CalculateSize(_repeated_gids_codec);
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      size += inputAngles_.CalculateSize(_repeated_inputAngles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFrameData other) {
      if (other == null) {
        return;
      }
      if (other.FrameIndex != 0) {
        FrameIndex = other.FrameIndex;
      }
      gids_.Add(other.gids_);
      inputs_.Add(other.inputs_);
      inputAngles_.Add(other.inputAngles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameIndex = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            gids_.AddEntriesFrom(input, _repeated_gids_codec);
            break;
          }
          case 26:
          case 24: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 34:
          case 32: {
            inputAngles_.AddEntriesFrom(input, _repeated_inputAngles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CFrameUpdate : pb::IMessage<S2CFrameUpdate> {
    private static readonly pb::MessageParser<S2CFrameUpdate> _parser = new pb::MessageParser<S2CFrameUpdate>(() => new S2CFrameUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CFrameUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFrameUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFrameUpdate(S2CFrameUpdate other) : this() {
      curServerFrame_ = other.curServerFrame_;
      frameDatas_ = other.frameDatas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CFrameUpdate Clone() {
      return new S2CFrameUpdate(this);
    }

    /// <summary>Field number for the "curServerFrame" field.</summary>
    public const int CurServerFrameFieldNumber = 1;
    private int curServerFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurServerFrame {
      get { return curServerFrame_; }
      set {
        curServerFrame_ = value;
      }
    }

    /// <summary>Field number for the "frameDatas" field.</summary>
    public const int FrameDatasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::C2SProtoInterface.S2CFrameData> _repeated_frameDatas_codec
        = pb::FieldCodec.ForMessage(18, global::C2SProtoInterface.S2CFrameData.Parser);
    private readonly pbc::RepeatedField<global::C2SProtoInterface.S2CFrameData> frameDatas_ = new pbc::RepeatedField<global::C2SProtoInterface.S2CFrameData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::C2SProtoInterface.S2CFrameData> FrameDatas {
      get { return frameDatas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CFrameUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CFrameUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurServerFrame != other.CurServerFrame) return false;
      if(!frameDatas_.Equals(other.frameDatas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurServerFrame != 0) hash ^= CurServerFrame.GetHashCode();
      hash ^= frameDatas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurServerFrame != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurServerFrame);
      }
      frameDatas_.WriteTo(output, _repeated_frameDatas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurServerFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurServerFrame);
      }
      size += frameDatas_.CalculateSize(_repeated_frameDatas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CFrameUpdate other) {
      if (other == null) {
        return;
      }
      if (other.CurServerFrame != 0) {
        CurServerFrame = other.CurServerFrame;
      }
      frameDatas_.Add(other.frameDatas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurServerFrame = input.ReadInt32();
            break;
          }
          case 18: {
            frameDatas_.AddEntriesFrom(input, _repeated_frameDatas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2CAllRoomInfo : pb::IMessage<S2CAllRoomInfo> {
    private static readonly pb::MessageParser<S2CAllRoomInfo> _parser = new pb::MessageParser<S2CAllRoomInfo>(() => new S2CAllRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2CAllRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::C2SProtoInterface.ProtoInterfaceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAllRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAllRoomInfo(S2CAllRoomInfo other) : this() {
      allRooms_ = other.allRooms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2CAllRoomInfo Clone() {
      return new S2CAllRoomInfo(this);
    }

    /// <summary>Field number for the "allRooms" field.</summary>
    public const int AllRoomsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::C2SProtoInterface.S2CRoomInfo> _repeated_allRooms_codec
        = pb::FieldCodec.ForMessage(10, global::C2SProtoInterface.S2CRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::C2SProtoInterface.S2CRoomInfo> allRooms_ = new pbc::RepeatedField<global::C2SProtoInterface.S2CRoomInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::C2SProtoInterface.S2CRoomInfo> AllRooms {
      get { return allRooms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2CAllRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2CAllRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allRooms_.Equals(other.allRooms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allRooms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allRooms_.WriteTo(output, _repeated_allRooms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allRooms_.CalculateSize(_repeated_allRooms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2CAllRoomInfo other) {
      if (other == null) {
        return;
      }
      allRooms_.Add(other.allRooms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allRooms_.AddEntriesFrom(input, _repeated_allRooms_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
